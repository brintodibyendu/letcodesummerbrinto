# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:
        if not root:
            return []
        Q=deque([root])
        ans_list=[[root.val]]
        temp=deque()
        while len(Q)!=0:
            val=Q.popleft()
            if val.left:
                temp.append(val.left)
            if val.right:
                temp.append(val.right)
            
            if not Q:
                if temp:
                    ans_list.append([n.val for n in temp])
                Q=temp
                temp=deque()
        
        return ans_list