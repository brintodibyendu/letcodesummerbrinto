# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSymmetric(self, root: Optional[TreeNode]) -> bool:
        return self.isSymmetricReal(root.left,root.right)
    
    
    
    def isSymmetricReal(self,left: Optional[TreeNode],right: Optional[TreeNode]) -> bool:
        if left==None and right==None:
            return True
        if (left==None and right!=None) or (right==None and left!=None):
            return False
        if left.val!=right.val:
            return False
        return self.isSymmetricReal(left.left,right.right) and self.isSymmetricReal(left.right,right.left)